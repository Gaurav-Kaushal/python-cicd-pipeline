name: Python CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code #Source Stage
        uses: actions/checkout@v3

      - name: Set up Python #Build Stage
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Pytest #Test Stage
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Build Docker Image #Build & Push to Docker Hub Stage
        run: docker build -t python-cicd-app:staging .
    
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push Docker Image to Docker Hub
        run: docker tag python-cicd-app:staging ${{ secrets.DOCKER_USERNAME }}/python-cicd-app:staging && docker push ${{ secrets.DOCKER_USERNAME }}/python-cicd-app:staging
      - name: Setup SSH Key #Deploy Stage
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to AWS EC2
        env:
          EC2_IP: ${{ secrets.AWS_EC2_IP }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_IP "bash -s" < ec2-setup.sh
          ssh -i private_key.pem -o StrictHostKeyChecking=no ubuntu@$EC2_IP "
            docker stop python-cicd-app || true &&
            docker rm python-cicd-app || true &&
            docker pull $DOCKER_USERNAME/python-cicd-app:staging &&
            docker run -d --name python-cicd-app -p 80:5000 $DOCKER_USERNAME/python-cicd-app:staging
          "
